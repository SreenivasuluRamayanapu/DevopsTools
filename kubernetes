Kubernetes is an open source orchestration system for managing containerized applications across multiple hosts, providing basic mechanisms
for the deployment, maintenance, and scaling of applications.
or
Kubernetes has the potential to hold the container deployment, scaling and descaling of the container and load balancing.
or
An open-source orchestration system for managing containerized applications across multiple hosts.
or
Managing the containers @large scale across multiple hosts

Kubernetes supports Docker and Rocket containers. 

Q.why docker Kubernetes  or why container orchestration?
consider a scenarion, where an application would have 5-6 microservices for a single application performing various tasks.these
microservices are put in seperate individual containers across multiple hosts, all these containers would need to talk to each other.
So you need something big like Docker Swarm (or) Kubernetes, that would load balance, scale & monitor the containers.
or
application would have a cluster of containers running across multiple hosts.containers running on multiple hosts can be manually
linked and orchestrated using Kubernetes like swarm




► What Is Kubernetes?
► Key Concepts of Kubernetes
► Kubernetes Architecture
► Getting Started With Kubernetes
► Run Your First Container
► Scale Applications
► Delete Applications
► Application Using Multiple Containers
► Namespace, Resource Quotas, and Limit



What is Minikube?
Minikube is a tool that makes it easy to run Kubernetes locally. This runs a single-node Kubernetes cluster inside a virtual machine.

Pod
In the VMware world the smallest atomic unit of deployment is the virtual machine(VM). In the docker world it is container.In the kubernetes
world it is pod.
A Pod is the smallest deployable unit that can be created, scheduled, and managed. It’s a logical collection of containers that belong to
an application.
Group of containers into logical units
How to create a Pod and how to launch containers inside a pod?
vi deployment.yaml  // this file is to define our deployment
apiVersion: v1
kind: Pod
# labels attached to this Pod
metadata:
  name: couchbase-pod
  labels:
    name: couchbase-pod
spec:
  containers:
  - name: couchbase
    # Docker image that will run in this Pod
    image: couchbase
    ports:
    - containerPort: 8091
   
Labels: key-value tags (e.g. "Name") that you and the system use to identify pods, replication controllers, and services   

What is Kubelet?
This is an agent service which runs on each node and enables the slave to communicate with the master. So, Kubelet works on the description
of containers provided to it in the PodSpec and makes sure that the containers described in the PodSpec are healthy and running.
Kubelet ensures that the containers defined in the Pods are started and continue running.
Q.how to define a containers in pod?


What is Kubectl?
Kubectl is the platform using which you can pass commands to the cluster. So, it basically provides the CLI to run commands against
the Kubernetes cluster with various ways to create and manage the Kubernetes component.
Kubctl CLI
kubectl is a command-line utility that controls the Kubernetes cluster. 

kubectl create -f  pod.yml/replicaset.yml/deployment.yml/service.yml
kubectl delete -f  podName/replicasetName/deploymentName/serviceName
kubectl describe 
kubectl get pods
kubectl --help 

kubectl [command] [type] [name] [flags]
[command] - create, get, describe, delete, or scale.
[type]or kind  - specifies the Kubernetes resource type like pod, service,replica set, node
[name]    - Specifies the name of the resource

https://dzone.com/refcardz/kubernetes-essentials?chapter=1
