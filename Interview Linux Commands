Shell Scripting Interview Questions:
1. Write scripts for monitoring, log processing, metrics collection and data visualization.
Q. How to delete log files which are older than x Days 
A. find LogfailsDirectoryPath -mtime +7 -exec rm {} \;
Q. How to check port numbers of all the services running on a server?
A. netstat -tlpn | grep httpd (to check port no of httpd service)
Q. Sort Processes by Memory Usage
A. ps aux | sort -rnk 4:
Q. Sort Processes by CPU Usage
A. ps aux | sort -nk 3:
Q. 


how to give execute permission to a file?
chmod +x deploy


~/.ssh/authorized_keys

//Copy your ssh public key to a server from a machine that doesn't have ssh-copy-id
If you use Mac OS X or some other *nix variant that doesn't come with ssh-copy-id, this one-liner will allow you to add your public key to a remote machine so you can subsequently ssh to that machine without a password
cat ~/.ssh/id_rsa.pub | ssh user@machine "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"


//Copy ssh keys to user@host to enable password-less ssh logins
cat ~/.ssh/id_rsa.pub | ssh user@host 'cat >> ~/.ssh/authorized_keys'


//Copy your SSH public key on a remote machine for passwordless login - the easy way
  or
  Copy ssh keys to user@host to enable password-less ssh logins.
ssh-copy-id username@hostname



copy public key
If the username on the remote host is the same as on the local machine you can omit the username.
ssh-copy-id host

cat ~/.ssh/id_rsa.pub | ssh <user>@<hostname> 'cat >> .ssh/authorized_keys && echo "Key copied"'
cat ~/.ssh/id_rsa.pub | ssh <user>@<hostname> 'umask 0077; mkdir -p .ssh; cat >> .ssh/authorized_keys && echo "Key copied"'

ssh-copy-id user@hostname.example.com

node {
  sshagent (credentials: ['deploy-dev']) {
    sh 'ssh -o StrictHostKeyChecking=no -l user@192.168.1.106/hostname 
  }
}
or
stage ('Deploy') {
    steps{
        sshagent(credentials : ['use-the-id-from-credential-generated-by-jenkins']) {
            sh 'ssh -o StrictHostKeyChecking=no user@hostname.com uptime'
            sh 'ssh -v user@hostname.com'
            sh 'scp ./source/filename user@hostname.com:/remotehost/target'
        }
    }
}








Jenkins Interview Questions:
1. what is Continuous Integration, Continuous Delivery and Continuous Deployment?
2. How do you Implementing CI/CD pipeline throgh jenkins
      1.via build pipeline(upstream and downstream jobs)
      2.via pipeline script
3. How do you Implement automated build in Jenkins
4. How do you Implement automated deployment
5. master/slave architecture
6. parameterized builds
7. difference between Matrix based security and Role based autherization strategy? How did you implement security for Jenkins?
8. What are the Major issues you have faced in Jenkins?


Git Interview Questions?
1. Explain Branching Strategy in your organisation?
2. 


Finding Files with Names, Find Files and Directories Based on Date and Time,
Find Files and Directories Based on Size, Find Files Based on their Permissions,


find command attributes
path
-type f or -type d
-name fileName or directoryName  //techmint.php or *.php
-exec rm -f {} \;
-mtime 
-size



• mtime —the time that the contents of a file were last modified 
• atime—the time that a file was read or accessed 
• ctime—the time that a file’s status was changed
Modification time: The last time when the file’s content was modified.
Access time: The last time when the file was read.
Change time: The last time when the file (either its content or metadata, such as permissions) were modified.

-mtime 2: The file was modified 2 days ago (i.e. in the last 48 to 72 hours).
-mtime -2: The file was modified less than 2 days ago (i.e. within the last 48 hours).
-mtime +2: The file was modified more than 2 days ago (i.e. 3 or more days, which means 72 hours or later).




find /usr/share  or find .
find /usr -name NEWS.txt - Finding items by their name
find /usr -type f -name '*.txt'  - Searching for files or directories
find /usr -type f -mtime 2   // find files in /usr which were modified two days ago           // Searching for files based on date and time
find /usr -type f -mtime 2 -amin 5      //find files modified 2 days ago and accessed 5 minutes ago
find /usr -type f -mtime +50 -mtime -100   //find files modified between 50 and 100 days ago  



Jenkins requires us to have the private ssh key for the server we want to connect with Jenkins server i.e remote server
https://linuxtechlab.com/how-to-easily-add-ssh-credentials-on-jenkins-server/
