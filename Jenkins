Jenkins is a continuous integration tool. 
Jenkins is a build automation server as well we can do deployment automation also.

Developers do the changes and checkin their code to source code repository like Git, Jenkins server pull the code under workspace in 
Jenkins home directory, then it compile the code and run the test cases then it perform source code quality check, if everything goes well 
it creates package. If something goes wrong send email notifications to the developers, so that they can fix the isssue again they push to
Git, this is how freequently integrate the code.

Once package is creted, automatically deploy it into the test servers for User Acceptance Test, then Finally, the application is manually
deployed on the production servers for release by taking an aprroval. So continuous dlivery is also a automated process except deploying
the application in to production based on approval.

continuous deployment is completely automated process right from developers check in their source code to Git to till deployment into
the production.
continuous deployment is risky if anything goes wrong in production it becomes messy.

Advantage of contnuous integration
1. immeadiate feedback to the developers about build result
2. detecting and fixing the bugs easier
3. it improves the productivity
4. it improves the code quality by minimizing the defects


Consider the 'Jenkins home directory' as a database. It’s very important to take care of it. This folder handles from simple
configurations upto your entire automation jobs. by default path will be 
JENKINS_HOME = /var/lib/jenkins             // Linux
                                Jobs
                                Workspace - source code will be pulled here from Github/svn, when you build the job, war will be created
                                            in target folder automatically
                                plugins   - stores plugins here
                                etc...
JENKINS_HOME = c:\ProgramFiles(x86)\Jenkins  // windows


under user's home directory - this is for customization
c:\Users\Sudha\Jenkins // for windows
/root/Jenkins          // for Linux
/home/Sudha/Jenkins
                      
                      
                      
JENKINS_HOME
 +- config.xml     (jenkins root configuration)
 +- *.xml          (other site-wide configuration files)
 +- userContent    (files in this directory will be served under your http://server/userContent/)
 +- fingerprints   (stores fingerprint records)
 +- plugins        (stores plugins)
 +- workspace (working directory for the version control system)
     +- [JOBNAME] (sub directory for each job)
 +- jobs
     +- [JOBNAME]      (sub directory for each job)
         +- config.xml     (job configuration file)
         +- latest         (symbolic link to the last successful build)
         +- builds
             +- [BUILD_ID]     (for each build)
                 +- build.xml      (build result summary)
                 +- log            (log file)
                 +- changelog.xml  (change log)                      
                      
                      
                      
                      
how to check jenkins logs on Mac/Linux
/var/log/jenkins/jenkins.log
or 
Go to Manage jenkins -> system logs



Below are the things we need to Notice
Go to Jenkins -> Manage Jenkins
1.configure system   -  this is for global settings and paths
2.Global Tool Configuration - this is for configure tools and their locations
3.Configure Global Security - this is for Jenkins security 
4.Manage Nodes - To Add, remove and monitor Slave machines
5.Manage and Assign Roles - this is for creating role and assign them to the users/groups
6.Manage Users  - create, deleteing and modifying the users to log in to the jenkins
















how to increase Jenkins Heap space?
A.We use Jennkins extensively, masters running on 96GB RAM, 4-core Xeon machines, with up to 100 slave machines. The main problems are:
memory hog - eats up as much RAM as one gives him, and when the garbage collector kicks in, connections to slaves might time out. Needs
careful tuning of the Java GC params. Heap size needs to be set very high.
GUI will become extemly slow when many jobs are running. Meant to be interactive, it will poll the server regularely and overload
it when lots of jobs are running.


How can i use jenkins to rollback previous version of deploy?
In this case, you just need parametrize your current pipeline to receive branch name or tag as parameter.
Workflow could be:
Before merge your release branch to master , verify existence of tag with previous stable release or create a new one.
Merge your release (qa, test, or whatever) to master branch
Execute your current pipeline with master branch.
If some error is detected, perform a rollback using your SCM ( csv, svn, git, etc). For instance, bitbucket has a revert option in merged pull request section.
Execute again the same pipeline with master branch as parameter. If rollback was not possible, Execute this pipeline with last stable tag as parameter.




how you do build automation? how you trigger the build, is it CI or it is manual(click on build now)?
by using cron expression for every 6 hours 



CI/CD Pipeline in Jenkins
1.chaining the jobs or upstream and downstream jobs
2.jenkins pipeline script


deploying War file from build server to a docker container(tomcat) using Ansible
Developers checkin their changes to Git, Jenkins pulls the code then build it, whatever build artifacts has generated give it
to the Ansible, ansible is going to deploy it into the tomcat server.
implementation:
1.Jenkins server/build server
2.Ansible server
3.Tomcat Server
step1:
Publish over ssh plugin - Send files(SCP) over SSH to a remote server i.e Ansible server
                          and Execute commands on a remote server
                          Manage Jenkins - Configure System - publish over ssh - ssh servers
                          Hostname: Ansible serverIP
                          username: ansadm
                          password: ******
step2:
Establish ssh connection(password less authentication) b/n Ansible server and Tomcat server. create a playbook copywarfile.yml
under /opt/playbooks location in Ansible server
# copywarfile.yml
  ---
  - hosts: all 
    become: true
    tasks: 
     - name: copy jar/war onto tomcat servers
        copy:
          src: /op/playbooks/wabapp/target/webapp.war
          dest: /opt/apache-tomcat-8.5.32/webapps
          
step3:
In Jenkins server, Go to post build actions - send files or execute commands over SSH
ssh server Name  - target machine(ansible serverIP)
source file      - war file location  i.e Webapplication/target/*.war
Remote directory - //opt//playbooks (where do you want to copy on target machine)
Again, Go to post build actions - send files or execute commands over SSH
ssh server Name  - target machine(ansible serverIP)
Execute command  - ansible-playbook /opt/playbooks/copywarfile.yml  (we are going to execute this command on ansible server)  
Execute job and you should be able to seen build has been deployed on Tomcat server.





The main benifit of ht eparameterizes jenkins jobs, we cn reuse these jobs
The Build Pipeline plugin is excellent for visuallising

YOU MUST DEFINE THE PARAMETER IN DOWNSTREAM JOBS VIA  "This project is parameterized". For example, if job1 passes ABC=123 to job2 then in job2 mark the job as "This project is parameterized" and "Add Parameter" named "ABC".

name is the name of the parameter name.
To access this parameter ${name} or $name

Booliean paramter
string parameter
file parameter
choic eparameter
credentials parameter
password parameter


You can also use a custom variable "$BRANCH". During the trigger event this value will be replaced with the branch that triggered the build.


we have to configure Jenkins hook url in Github seeting's under webhook&services section
You made some changes in your project.
You push those changes in Github on master or any branch.
Github will notify Jenkins about the new push. ( We will configure it )
Jenkins will then run the commands you ask it to run.
Those commands will contain the following.
Test script.
Deployment script.




#!/bin/bash
jar_pid() {
  echo `ps aux | grep onlineutilityapi-1.0-SNAPSHOT.jar | grep -v grep | awk '{ print $2 }'`
}

  pid=$(jar_pid)
  if [ -n "$pid" ]
  then
    echo "kill -9 $pid"
    kill -9 $pid
  else
    echo "Jar is not running"
fi

windows batch script
chmod o+x /usr/local/springboot/apijars/onlineutilityapi-1.0-SNAPSHOT.jar
nohup java -jar /usr/local/springboot/apijars/onlineutilityapi-1.0-SNAPSHOT.jar  >/log/springbootlogs/onlineUtilityapi.log 2>&1 &
env



The Role Strategy Plugin enable you to assign different roles and privileges to different users. 
https://www.guru99.com/create-users-manage-permissions.html

Jenkins Buildpipeline view
https://www.guru99.com/jenkins-pipeline-tutorial.html

automatically scaling Jenkins Slaves based on the workload of jobs

Jenkins-Deploy-Plug-in  - This one has lots of issues, which is not really trustworthy to deploy to production
Jenkins Publish over SSH Plugin  - For this, you need to change the global configuration, which is manual work for every deploy.

Any ideas how to solve this? Maybe with some scripts or plugins?

https://stackoverflow.com/questions/13976373/continuous-deployment-with-jenkins

ssh plugin                   - 
publish over ssh plugin      -
SSH Agent Plugin             - 
Copy Artifact Plugin         - 
parameterized trigger plugin -



How to pass parameter to downstream job in Pipeline job?

https://itisatechiesworld.wordpress.com/jenkins-related-articles/jenkins-configuration/jenkins-passing-a-parameter-from-one-job-to-another/


minify-maven plugin
maven-surefire plugin - This is for TestNG






% %   ho wqot call variables in code 
$


the parameter name is taken as an environment variable
After configuring the job, whenever you click the build now button, Jenkins prompts for the parameter
When you are using file Parameter, the uploaded file will be placed into the working directory

define the parameter like variable  BUILD_NUMBER =
Passing build number as a parameter and accesing that particular variable
$(BUILD_NUMBER)

mvn clean install -Pjenkins -DBUILD_NUMBER=${BUILD_NUMBER}


client server(SSH server) architecture

jenkins      sshserver

Manage Jenkins
Configure System
Publish Over SSH section
enter /Users/Shared/Jenkins/.ssh/id_rsa to path to key
Click “Add” at “SSH Servers”
Enter any logical name to “Name”
Enter IP Address or Hostname of the server to “Hostname”
Enter the user name to log in to “Username”
Enter any directory to “Remote Directory”
Click “Test Configuration”
Click “Save” at bottom of the page


send build artifacts over ssh
transfer files or execute commands remotely





Jenkins errors:
1. 17:26:45 [ERROR] missing ; before statement at static-combined.js line 16416:46
   17:26:45                         varÂ otConsultantURLÂ = $scope.OTprofileOAOT+"/getOfficeInfo.do";
   17:26:45                                               ^
   17:26:45 
   17:26:45 [ERROR] missing ; before statement at static-combined.js line 16418:46
   17:26:45                         varÂ otConsultantURLÂ = $scope.OTprofile+"/getOfficeInfo.do";
   17:26:45                                               ^
   17:26:45 
   17:26:45 [ERROR] missing ; before statement at static-combined.js line 16434:46
   17:26:45                         varÂ otConsultantURLÂ = $scope.OTprofile+"/getAccCodeInfo.do";
   3 syntax errors
  Answer: source code eerror

2. missing maven sure fire plugin
   this is for TESTNG 
   Answer: we need to add maven-sure-fire dependency in pom.xml
   
3.tomcat manager expection
  Answer: we have to give manager-script roles permission in tomcat-users.xml
  or
  restart the tomcat server
  
4.Active session: [1] haysdevops@hrlnxot4260.emea.hays.loc
  Can't get attributes of file '/usr/local/springboot/apijars/onlineutilityapi-1.0-SNAPSHOT.jar'.
  No such file or directory.
  Error code: 2
  Error message from server: No such file
  D:\JenkinsHome\jobs\PreProd_ProjectSAPI_OnlineUtilityAPI\workspace>exit 1 
  Build step 'Execute Windows batch command' marked build as failure
  Notifying upstream projects of job completion
  Finished: FAILURE  
  Answer:
  
5. [SSH] exception, channel is not opening  
  
  
  
  service --status-all
service --status-all | more
service --status-all | grep ntpd
service --status-all | less

PRINT THE STATUS OF ANY SERVICE
service httpd status

LIST SERVICE AND THEIR OPEN PORTS
netstat -tulpn


TURN ON / OFF SERVICE
ntsysv
chkconfig service off
chkconfig service on
chkconfig httpd off
chkconfig ntpd on


Go through this link about httpd
https://docs.bmc.com/docs/display/public/bsd7700/Modifying+the+httpd.conf+file+in+the+Apache+conf+folder



https://blog.couchbase.com/continuous-deployment-with-jenkins-and-net/
MSBuild.exe path   c:\Program Files(x86)\MSBuild\14.0\Bin
                   C:\Windows\Microsoft.NET\Framework\v3.5\MSBuild.exe
In the path field, insert the fully qualified path to msbuild.exe


In build step,
 Build a Visual Studio Project or solution using MSBuild - in this section you have to set 2 parameters or fields
   MsBuild Build File - specify the name of the build file
                        enter the path to the project/solution that needs to be built in the format - ${WORKSPACE}\PhantomTube\PhantomTube.sln
   command Line Arguements  -  /p:Configuration=Release is going to build your project in Release mode. 
                               /t:build/p:Platform Target=x86 /p:Configuration=Release /maxcpucount




Using Continuous Integration/Continuous Deployment, enables a workflow like this:
Code, build and test locally on your dev. box (as usual)
Check source code in to a development branch in your favourite Source Control Management System.
Optional code review by team members.
Merge your changes to the main (release) branch.
The CI Server will detect the changes to the main branch and download, compile and deploy/install your application on the release server.

cloning the source / checkout the cod efrom scm


What’s important to note here is the path to the “workspace” as this is where the source code is downloaded to and built from. This knowledge can be very helpful when debugging the CI setup.

   
how to change jenkins home directory
  Jenkins->Manage Jenkins->Configure System->home directory->advanced
we can change our workspace and build directory
${JENKINS_HOME} — Jenkins home directory

what is the difference b/n projetc and solution in .net
When you create an app, website, etc. in Visual Studio, you start with a project. In a logical sense, a project contains all the source code files, icons, images, data files, etc. that are compiled into an executable, library
A project also contains compiler settings and other configuration files that might be needed by various services or components that your program communicates with.

A project is contained within a solution.It's simply a container for one or more related projects, along with build information, Visual Studio window settings, and any miscellaneous files that aren't associated with a particular project.
A solution is described by a text file (extension .sln) with its own unique format; it's not intended to be edited by hand.
Extension	Name	                      Description
.sln	        Visual Studio Solution	      Organizes projects, project items, and solution items in the solution.


Solution
  ProjectA
    -file
    -file
     ....
  ProjectB
    -File
    -File
     ....

solution 'MyApp1'
   WebApplication1Project
       webform1.aspx
       login.aspx
       registration.aspx
   webApplication2Project


Connect to Source Controls via HTTPS or SSH

Parametrize Build Configurations

Build and package your code into a TeamCity Artifact

Run Unit Tests and produce Code Coverage R`````eports

Checking GitHub Merge Pull Requests automatically

Manage and subscribe to notifications and alert

Produce Docker Images and Deploy to Amazon Elastic Container Services


Connecting to a Version Control System (VCS):
In this lecture I will show you that how you can connect to a Version Control System (VCS) also known as a Source Control, such as hosted Gir, GitHub or BitBucket.

You can connect to GitHub and BitBucket either using a username/password pair or using a SSH key. I will demonstrate that how you can generate a SSH key and then connect to GitHub using the key.



NuGet is for downloading the necessary packages, to build the job using MSBuild
NuGet is for downloading the necessary packages for MSBuild
https://www.automatetheplanet.com/integrate-jenkins-msbuild-nuget/


ssh plugin 
publish over ssh plugin
copy artifact plugin




I try to use the SSH Plugin for jenkins. I go to the global configuration of my jenkins where I try to describe my configuration.
Hostname: IP of server
Port: 22
Username: usernamex
Keyfile: Here I need to place the key which is necessary to ssh


https://hodgkins.io/automating-with-jenkins-and-powershell-on-windows-part-2




exec command in Linux is used to execute a command from the bash itself
This command does not create a new process it just replaces the bash with the command to be executed

cp /tmp/my_application.war $WEBAPP


0 0 1 * * command /directory/file.ext



This will run the command foo at 12:00AM on the first of every month

0 0 1 * * /usr/bin/foo


https://manadaym.github.io/2018/01/05/publish-over-ssh/


how to increase Jenkins Heap space?
https://stackoverflow.com/questions/14762162/how-do-i-give-jenkins-more-heap-space-when-its-running-as-a-daemon-on-ubuntu


Goals and Options: -Dmaven.test.skip=true -P preprod clean package -U -e -X
post steps: run only if build succeed*/ Run only if build succeeds or is unstable/ Run regardless of build result	
build settings: Email Notification
                  Recipients- chandan.kumar2@hays.com
                              Send e-mail for every unstable build
                              Send separate e-mails to individuals who broke the build
                              Send e-mail for each failed module	
post build actions:
    Deploy war/ear to a container
          WAR/EAR Files: **/*.war
          ContextPath  : /CompositeViewAPI
          Containers:
    Editable Email Notification
          Project From: deployment@hays.team
          Project Recipient List: gaurav.yadav@hays.com



Build
  Root Pom: pom.xml
  Goals and options: -Dmaven.test.skip=true clean package -U -e -X
   

pre steps
  Execute shell script on remote host using ssh
                   SSH site: root@hrlnxpd4079:22
                   Command:  #!/bin/bash
jar_pid() {
  echo `ps aux | grep BarbourABI-0.0.1-SNAPSHOT.jar | grep -v grep | awk '{ print $2 }'`
}

  pid=$(jar_pid)
  if [ -n "$pid" ]
  then
    echo "kill -9 $pid"
    kill -9 $pid
  else
    echo "Jar is not running"
 fi

how to define the function in shellscripting
how to access/call the function in shellscripting



post steps:
Execute Windows batch command
   command: psftp.exe -l root -pw "Q!W@E#R$T%Y^U&89" 10.51.144.90 -b D:\DeployScript\preprodbarbourapi.txt


Execute shell script on remote host using ssh
   SSH site: root@hrlnxpd4079:22
   Command:  nohup java -jar -Dspring.profiles.active=preprod /usr/local/springboot/BarbourABI-0.0.1-SNAPSHOT.jar >/usr/local/springboot/barbour-api.log & 



post steps:
Execute Windows batch command
    command:  rd D:\JenkinsHome\jobs\Pre-Prod-Barbour_ABI_Scheduler\workspace\target
Execute windows batch command
    command: cd BarbourABISchedulor
             git checkout origin/scheduler-pre-prod-conf -- ./src/main/resources/database.properties
             git checkout origin/scheduler-pre-prod-conf -- ./src/main/resources/settings.properties


configure system

Server Groups Center
 	Server Group List :	 Group Name- springboot
  SSH Port	
22

 	User Name	
txmroot

 	Password	
•••••••••
server list
   	Server Group:		
 	Server Name	
hrlnxpd2105

 	Server IP	
10.190.8.39


SSH remote hosts
SSH sites	
 	Hostname	
hrlnxpd2105

 	Port	
22

 	Credentials	
 
add
 		
    

Extended E-mail Notification    
   SMTP Server - internalrelay.hayshps.com
  
  
E-mail Notification
   SMTP server - internalrelay.hayshps.com
   Default user e-mail suffix - @hays.com
   
Publish over SSH
   
   
   
   
   
   
   
 10.50.86.6:8080 
administrator
Bu!ldS3rv3r@123
  

 		


 		



