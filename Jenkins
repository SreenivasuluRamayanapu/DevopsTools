Jenkins is a continuous integration tool. 
Jenkins is a build automation server as well we can do deployment automation also.

Developers do the changes and checkin their code to source code repository like Git, Jenkins server pull the code under workspace in 
Jenkins home directory, then it compile the code and run the test cases then it perform source code quality check, if everything goes well 
it creates package. If something goes wrong send email notifications to the developers, so that they can fix the isssue again they push to
Git, this is how freequently integrate the code.

Once package is creted, automatically deploy it into the test servers for User Acceptance Test, then Finally, the application is manually
deployed on the production servers for release by taking an aprroval. So continuous dlivery is also a automated process except deploying
the application in to production based on approval.

continuous deployment is completely automated process right from developers check in their source code to Git to till deployment into
the production.
continuous deployment is risky if anything goes wrong in production it becomes messy.

Advantage of contnuous integration
1. immeadiate feedback to the developers about build result
2. detecting and fixing the bugs easier
3. it improves the productivity
4. it improves the code quality by minimizing the defects


Consider the 'Jenkins home directory' as a database. It’s very important to take care of it. This folder handles from simple
configurations upto your entire automation jobs.
/var/lib/jenkins

how to check jenkins logs on Mac/Linux
/var/log/jenkins/jenkins.log
or 
Go to Manage jenkins -> system logs

how to increase Jenkins Heap space?
A.We use Jennkins extensively, masters running on 96GB RAM, 4-core Xeon machines, with up to 100 slave machines. The main problems are:
memory hog - eats up as much RAM as one gives him, and when the garbage collector kicks in, connections to slaves might time out. Needs
careful tuning of the Java GC params. Heap size needs to be set very high.
GUI will become extemly slow when many jobs are running. Meant to be interactive, it will poll the server regularely and overload
it when lots of jobs are running.


How can i use jenkins to rollback previous version of deploy?
In this case, you just need parametrize your current pipeline to receive branch name or tag as parameter.
Workflow could be:
Before merge your release branch to master , verify existence of tag with previous stable release or create a new one.
Merge your release (qa, test, or whatever) to master branch
Execute your current pipeline with master branch.
If some error is detected, perform a rollback using your SCM ( csv, svn, git, etc). For instance, bitbucket has a revert option in merged pull request section.
Execute again the same pipeline with master branch as parameter. If rollback was not possible, Execute this pipeline with last stable tag as parameter.




how you do build automation? how you trigger the build, is it CI or it is manual(click on build now)?
by using cron expression for every 6 hours 



CI/CD Pipeline in Jenkins
1.chaining the jobs or upstream and downstream jobs
2.jenkins pipeline script


deploying War file from build server to a docker container(tomcat) using Ansible
Developers checkin their changes to Git, Jenkins pulls the code then build it, whatever build artifacts has generated give it
to the Ansible, ansible is going to deploy it into the tomcat server.
implementation:
1.Jenkins server/build server
2.Ansible server
3.Tomcat Server
step1:
Publish over ssh plugin - Send files(SCP) over SSH to a remote server i.e Ansible server
                          and Execute commands on a remote server
                          Manage Jenkins - Configure System - publish over ssh - ssh servers
                          Hostname: Ansible serverIP
                          username: ansadm
                          password: ******
step2:
Establish ssh connection(password less authentication) b/n Ansible server and Tomcat server. create a playbook copywarfile.yml
under /opt/playbooks location in Ansible server
# copywarfile.yml
  ---
  - hosts: all 
    become: true
    tasks: 
     - name: copy jar/war onto tomcat servers
        copy:
          src: /op/playbooks/wabapp/target/webapp.war
          dest: /opt/apache-tomcat-8.5.32/webapps
          
step3:
In Jenkins server, Go to post build actions - send files or execute commands over SSH
ssh server Name  - target machine(ansible serverIP)
source file      - war file location  i.e Webapplication/target/*.war
Remote directory - //opt//playbooks (where do you want to copy on target machine)
Again, Go to post build actions - send files or execute commands over SSH
ssh server Name  - target machine(ansible serverIP)
Execute command  - ansible-playbook /opt/playbooks/copywarfile.yml  (we are going to execute this command on ansible server)  
Execute job and you should be able to seen build has been deployed on Tomcat server.





The main benifit of ht eparameterizes jenkins jobs, we cn reuse these jobs
The Build Pipeline plugin is excellent for visuallising

YOU MUST DEFINE THE PARAMETER IN DOWNSTREAM JOBS VIA  "This project is parameterized". For example, if job1 passes ABC=123 to job2 then in job2 mark the job as "This project is parameterized" and "Add Parameter" named "ABC".

name is the name of the parameter name.
To access this parameter ${name} or $name

Booliean paramter
string parameter
file parameter
choic eparameter
credentials parameter
password parameter


You can also use a custom variable "$BRANCH". During the trigger event this value will be replaced with the branch that triggered the build.


we have to configure Jenkins hook url in Github seeting's under webhook&services section
You made some changes in your project.
You push those changes in Github on master or any branch.
Github will notify Jenkins about the new push. ( We will configure it )
Jenkins will then run the commands you ask it to run.
Those commands will contain the following.
Test script.
Deployment script.



Active session: [1] haysdevops@hrlnxot4260.emea.hays.loc
Can't get attributes of file '/usr/local/springboot/apijars/onlineutilityapi-1.0-SNAPSHOT.jar'.
No such file or directory.
Error code: 2
Error message from server: No such file

D:\JenkinsHome\jobs\PreProd_ProjectSAPI_OnlineUtilityAPI\workspace>exit 1 
Build step 'Execute Windows batch command' marked build as failure
Notifying upstream projects of job completion
Finished: FAILURE

#!/bin/bash
jar_pid() {
  echo `ps aux | grep onlineutilityapi-1.0-SNAPSHOT.jar | grep -v grep | awk '{ print $2 }'`
}

  pid=$(jar_pid)
  if [ -n "$pid" ]
  then
    echo "kill -9 $pid"
    kill -9 $pid
  else
    echo "Jar is not running"
fi

windows batch script
chmod o+x /usr/local/springboot/apijars/onlineutilityapi-1.0-SNAPSHOT.jar
nohup java -jar /usr/local/springboot/apijars/onlineutilityapi-1.0-SNAPSHOT.jar  >/log/springbootlogs/onlineUtilityapi.log 2>&1 &
env



The Role Strategy Plugin enable you to assign different roles and privileges to different users. 
https://www.guru99.com/create-users-manage-permissions.html

Jenkins Buildpipeline view
https://www.guru99.com/jenkins-pipeline-tutorial.html

automatically scaling Jenkins Slaves based on the workload of jobs

Jenkins-Deploy-Plug-in  - This one has lots of issues, which is not really trustworthy to deploy to production
Jenkins Publish over SSH Plugin  - For this, you need to change the global configuration, which is manual work for every deploy.

Any ideas how to solve this? Maybe with some scripts or plugins?

https://stackoverflow.com/questions/13976373/continuous-deployment-with-jenkins

ssh plugin           - https://wiki.jenkins.io/display/JENKINS/SSH+plugin
publish over ssh     -
SSH Agent Plugin     - https://plugins.jenkins.io/ssh-agent   //This plugin allows you to provide SSH credentials to builds via a ssh-agent in Jenkins.
Copy Artifact Plugin - https://wiki.jenkins.io/display/JENKINS/Copy+Artifact+Plugin
parameterized trigger plugin -
Clone Workspace SCM Plugin


How to pass parameter to downstream job in Pipeline job?

https://itisatechiesworld.wordpress.com/jenkins-related-articles/jenkins-configuration/jenkins-passing-a-parameter-from-one-job-to-another/


minify-maven plugin
maven-surefire plugin - This is for TestNG


error:

17:26:45 [ERROR] missing ; before statement at static-combined.js line 16416:46
17:26:45                         varÂ otConsultantURLÂ = $scope.OTprofileOAOT+"/getOfficeInfo.do";
17:26:45                                               ^
17:26:45 
17:26:45 [ERROR] missing ; before statement at static-combined.js line 16418:46
17:26:45                         varÂ otConsultantURLÂ = $scope.OTprofile+"/getOfficeInfo.do";
17:26:45                                               ^
17:26:45 
17:26:45 [ERROR] missing ; before statement at static-combined.js line 16434:46
17:26:45                         varÂ otConsultantURLÂ = $scope.OTprofile+"/getAccCodeInfo.do";
3 syntax errors



% %   ho wqot call variables in code 
$


the parameter name is taken as an environment variable
After configuring the job, whenever you click the build now button, Jenkins prompts for the parameter
When you are using file Parameter, the uploaded file will be placed into the working directory

define the parameter like variable  BUILD_NUMBER =
Passing build number as a parameter and accesing that particular variable
$(BUILD_NUMBER)

mvn clean install -Pjenkins -DBUILD_NUMBER=${BUILD_NUMBER}


client server(SSH server) architecture

jenkins      sshserver

Manage Jenkins
Configure System
Publish Over SSH section
enter /Users/Shared/Jenkins/.ssh/id_rsa to path to key
Click “Add” at “SSH Servers”
Enter any logical name to “Name”
Enter IP Address or Hostname of the server to “Hostname”
Enter the user name to log in to “Username”
Enter any directory to “Remote Directory”
Click “Test Configuration”
Click “Save” at bottom of the page


send build artifacts over ssh
transfer files or execute commands remotely



Jenkins home directory  c:\program Files (X86)\Jenkins
