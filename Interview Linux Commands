Shell Scripting Interview Questions:
1. Write scripts for monitoring, log processing, metrics collection and data visualization.
Q. How to delete log files which are older than x Days 
A. find LogfailsDirectoryPath -mtime +7 -exec rm {} \;
Q. How to check port numbers of all the services running on a server?
A. netstat -tlpn | grep httpd (to check port no of httpd service)
Q. Sort Processes by Memory Usage
A. ps aux | sort -rnk 4:
Q. Sort Processes by CPU Usage
A. ps aux | sort -nk 3:
Q. 


how to give execute permission to a file?
chmod +x deploy


~/.ssh/authorized_keys

//Copy your ssh public key to a server from a machine that doesn't have ssh-copy-id
If you use Mac OS X or some other *nix variant that doesn't come with ssh-copy-id, this one-liner will allow you to add your public key to a remote machine so you can subsequently ssh to that machine without a password
cat ~/.ssh/id_rsa.pub | ssh user@machine "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"


//Copy ssh keys to user@host to enable password-less ssh logins
cat ~/.ssh/id_rsa.pub | ssh user@host 'cat >> ~/.ssh/authorized_keys'


//Copy your SSH public key on a remote machine for passwordless login - the easy way
  or
  Copy ssh keys to user@host to enable password-less ssh logins.
ssh-copy-id username@hostname



copy public key
If the username on the remote host is the same as on the local machine you can omit the username.
ssh-copy-id host

cat ~/.ssh/id_rsa.pub | ssh <user>@<hostname> 'cat >> .ssh/authorized_keys && echo "Key copied"'
cat ~/.ssh/id_rsa.pub | ssh <user>@<hostname> 'umask 0077; mkdir -p .ssh; cat >> .ssh/authorized_keys && echo "Key copied"'

ssh-copy-id user@hostname.example.com

node {
  sshagent (credentials: ['deploy-dev']) {
    sh 'ssh -o StrictHostKeyChecking=no -l user@192.168.1.106/hostname 
  }
}
or
stage ('Deploy') {
    steps{
        sshagent(credentials : ['use-the-id-from-credential-generated-by-jenkins']) {
            sh 'ssh -o StrictHostKeyChecking=no user@hostname.com uptime'
            sh 'ssh -v user@hostname.com'
            sh 'scp ./source/filename user@hostname.com:/remotehost/target'
        }
    }
}








Jenkins Interview Questions:
1. what is Continuous Integration, Continuous Delivery and Continuous Deployment?
2. How do you Implementing CI/CD pipeline throgh jenkins
      1.via build pipeline(upstream and downstream jobs)
      2.via pipeline script
3. How do you Implement automated build in Jenkins
4. How do you Implement automated deployment
5. master/slave architecture
6. parameterized builds
7. difference between Matrix based security and Role based autherization strategy? How did you implement security for Jenkins?
8. What are the Major issues you have faced in Jenkins?


Git Interview Questions?
1. Explain Branching Strategy in your organisation?
2. 


Finding Files with Names, Find Files and Directories Based on Date and Time,
Find Files and Directories Based on Size, Find Files Based on their Permissions,


find command attributes
1. path
2. -type f or -type d
3. -name fileName or directoryName  //techmint.php or *.php
4. -exec rm -f {} \;
5. -mtime 
6. -size



• mtime —the time that the contents of a file were last modified 
• atime—the time that a file was read or accessed 
• ctime—the time that a file’s status was changed
Modification time: The last time when the file’s content was modified.
Access time: The last time when the file was read.
Change time: The last time when the file (either its content or metadata, such as permissions) were modified.

-mtime 2: The file was modified 2 days ago (i.e. in the last 48 to 72 hours).
-mtime -2: The file was modified less than 2 days ago (i.e. within the last 48 hours).
-mtime +2: The file was modified more than 2 days ago (i.e. 3 or more days, which means 72 hours or later).




find /usr/share  or find .
find /usr -name NEWS.txt - Finding items by their name
find /usr -type f -name '*.txt'  - Searching for files or directories
find /usr -type f -mtime 2   // find files in /usr which were modified two days ago           // Searching for files based on date and time
find /usr -type f -mtime 2 -amin 5      //find files modified 2 days ago and accessed 5 minutes ago
find /usr -type f -mtime +50 -mtime -100   //find files modified between 50 and 100 days ago  



Jenkins requires us to have the private ssh key for the server we want to connect with Jenkins server i.e remote server
https://linuxtechlab.com/how-to-easily-add-ssh-credentials-on-jenkins-server/





SSH is typically used to log into a remote machine and execute commands 
It can transfer files using SSH file transfer (SFTP) or secure copy (SCP) protocols.

ssh client is a software that connects windows to Linux server.
Putty is a ssh client, we need to install putty in our windows server  to connect remote linux server, It uses the network protocols like ssh, telnet, rlogin 

To make a connection from
Windows/Linux    -> Linux        ssh connection
If it is windows -> Linus        ssh connection using ssh client(putty)
windows        -> Windows        RDP

1.WinScp
File Transfer from Windows to any server i.e windows/Linux(local server to remote server),it uses SFTP,Scp,FTP protocols to transfer
data. For this you must install WinScp in your local windows server.
2.Scp
The SCP is a network protocol, securely transferring files between a local host and a remote host or between two remote hosts.SCP uses
Secure Shell (SSH) for data transfer. first we need ssh connection should be establish and then you can run the scp command.
ssh  username@serverIP
scp  <options>  sourcefilepath  destination
ex: scp  /root/file.text   username@ServerIP:/home/user


publish over ssh plugin:
https://nozaki.me/roller/kyle/entry/articles-jenkins-sshdeploy
http://julianhigman.com/blog/2012/02/25/using-jenkins-to-run-remote-deployment-scripts-over-ssh/comment-page-1/
notice the difference
in Add build step
   send files or execute commands over ssh
in post build actions
   send build artifacts over ssh




Redirecting and Rewriting urls in apache webserver:
https://dzone.com/articles/running-tomcat-behind-apache***

You will frequently need to redirect one request location to another, and there are a variety of ways to do this.

Navigate to the conf folder and open httpd.conf file.
Make the following configurations in the < VirtualHost >  block and Restart your Apache server:
<VirtualHost *:80>
   ServerAdmin webmaster@domain.com
   DocumentRoot /var/www/webroot/ROOT
   ServerName website.jelastic.com
   ServerAlias *

   RewriteEngine On

   RewriteRule ^/application1/(.*) http://env-tomcat.jelastic.com/app1/ [P]
   ProxyPassReverse /application1/ http://env-tomcat.jelastic.com/app1/

   RewriteRule ^/application2/(.*) http://second-tomcat.jelastic.com/app2/ [P]
   ProxyPassReverse /application2/ http://second-tomcat.jelastic.com/app2/

   RewriteLog "/var/log/httpd/rewrite.log"

   ErrorLog logs/dummy-host.jelastic.com-error_log
   CustomLog logs/dummy-host.jelastic.com-access_log common
</VirtualHost>



The Redirect directive does a simple redirection from one location to another.
Redirect /one.html /another.html
Redirect /something/here.html http://elsewhere.com/there.html

RewriteEngine On
RewriteRule ^blog/?$ index.php?page=blog [L]
RewriteRule ^about/?$ index.php?page=about [L]
RewriteRule ^portfolio/?$ index.php?page=portfolio [L]
#RewriteRule ^.*$ index.php?page=blog [L]


In post steps
execute shell script on remote host using ssh
 ssh site  - username@serverip
 command




/var/log/httpd/access_log
/var/log/httpd/error_log


task1:

Change Web server configuration to 
a. Remove redirect for all quicksilver requests to quicksilver1.
b. Change Proxy pass rule to point quicksilver to LB on which depolyment will be done.
c. Restart Web services


Tasks:
Temp Files older then 3 days has been cleared.



how to enable the IIS for windows
start
Control panel
programs
Turn windows feature on / off
Check the IIS services (4th and 5th checkbox)
ok
restart the system







https://www.sumologic.com/insight/create-pipeline-with-aws-codepipeline/
The AWS CodePipeline Plugin for Jenkins
https://wiki.jenkins.io/display/JENKINS/AWS+CodePipeline+Plugin
https://dzone.com/articles/create-a-pipeline-using-the-aws-codepipeline-conso

AWS CodePipeline:
CodePipeline automates the build, test, and deploy phases of your release process every time there
is a code change, based on the release model you define.This enables you to rapidly and reliably deliver features and updates. 

You can easily integrate AWS CodePipeline with third-party services such as GitHub or with your own custom plugin.


1.pipeline name
2.source provider  // setting the source code for the pipeline
  In this step we need to tell AWS how are we managing our code. There are a few options available
  Amazon S3        // In order to use S3 as the source, you’ll need to provide a bucket name for an S3 bucket which has versioning enabled.
  AWS CodeCommit   // 
  GitHub 
3.Build provider
  Defining the Build Process for Your Pipeline. AWS offers three options for build providers:
  AWS CodeBuild
  Jenkins
  Solano CI
4.Deploying the Build with CodePipeline      //deployment to an environment for testing and/or production use
  AWS CodePipeline offers three options to do this—or you can select No Deployment if you want CodePipeline to only build your project. Those three deployment options are:
  AWS Elastic BeanStack
  AWS CodeDeploy
  AWS CloudFormation

AWS Code Deploy FAQ'S
https://aws.amazon.com/codedeploy/faqs/
AWS code Deploy tutorial:
http://www.tothenew.com/blog/aws-code-deploy-a-sample-walkthrough/
For picture: https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html
https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html




/etc/httpd/conf/httpd.conf
The first item to change is the Listen statement, which defines the IP address and port on which
Apache is to listen for page requests. Right now, you just need to make this website available to 
the local machine, so use the localhost address. The line should look like this when you finish:
Listen 127.0.0.1:80 
With this directive set to the IP address of the localhost, Apache will listen only for connections
from the local host. If you want the web server to listen for connections from remote hosts, you
would use the host's external IP address.


The DocumentRoot directive specifies the location of the HTML files that make up the pages of the 
website.That line does not need to be changed because it already points to the standard location. 
The line should look like this:
DocumentRoot "/var/www/html"
If you wanted to change the location where the website files are stored, this configuration item
is used to do that. For example, you might want to use a different name for the www subdirectory
to make the identification of the website more explicit. That might look like this:
DocumentRoot "/var/mywebsite/html"



Note:
These are the only Apache configuration changes needed to create a simple website. For this little
exercise, only one change was made to the httpd.conf file—the Listen directive. Everything else is
already configured to produce a working web server.
One other change is needed, however: opening port 80 in our firewall. I use iptables as my
firewall, so I change /etc/sysconfig/iptables to add a statement that allows HTTP protocol. 
The entire file looks like this:

# sample configuration for iptables service
# you can edit this manually or use system-config-firewall
# please do not ask us to add additional ports/services to this default configuration
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT

The line I added is the third from the bottom, which allows incoming traffic on port 80. Now I 
reload the altered iptables configuration.
[root@testvm1 ~]# cd /etc/sysconfig/ ; iptables-restore iptables

Note2:
whenever change is made to the /etc configuration file, we need to restart the server
service httpd restart
service httpd start
service httpd status
service httpd stop

you can use text mode web browser like Lynx to view the web page.First,install Lynx (if it is not already installed).
[root@testvm1 ~]# dnf -y install lynx
Then use the following command to display the web page
[root@testvm1 ~]# lynx localhost



Proxy pass
redirection of urls in apache webserver, edit httpd.config

ProxyPass "/mirror/foo/" "http://backend.example.com/"

RewriteRule ^/it/it(|/|/index.htm|)$           https://it.hays-careers.com   [NC,R=301,L] 


Request goes to www.olddomain.com/foo/test.html
Your apache will rewrite this to www.newdomain.com/bar/test.html
It will request this page from the responsible web server
Return the result to the browser as www.olddomain.com/foo/test.html






https://www.varonis.com/blog/what-is-a-proxy-server/


A proxy server is basically a computer on the internet with its own IP address that
your computer knows. When you send a web request, your request goes to the proxy server 
first. The proxy server then makes your web request on your behalf, collects the response
from the web server, and forwards you the web page data so you can see the page in your
browser.

When the proxy server forwards your web requests, it can make changes to the data you send
and still get you the information that you expect to see. A proxy server can change your
IP address, so the web server doesn’t know exactly where you are in the world. It can encrypt
your data, so your data is unreadable in transit. And lastly, a proxy server can block access
to certain web pages, based on IP address.


cache data to speed up common requests.

improve performance:
Consider the case where both user X and user Y access the World Wide Web through a proxy server.
First user X requests a certain Web page, which we'll call Page 1. Sometime later, user Y requests
the same page. Instead of forwarding the request to the Web server where Page 1 resides, which
can be a time-consuming operation, the proxy server simply returns the Page 1 that it already
fetched for user X. Since the proxy server is often on the same network as the user, this is a
much faster operation. Real proxy servers support hundreds or thousands of users. 



ssh logs
/var/log/auth.log  - for ubuntu
/var/log/messages
/var/log/secure
/var/log/sshd

Most possible error prone scenarios:
1. Host is not allowed to do ssh to the server
2. A direct root login may not be allowed
3. AllowUsers and AllowGroup is defined for the target node sshd config and hence the login fails
4. Many times a password less authentication fails due to incorrect permision of the necessary directory and files like .ssh, authorized_keys etc so make sure the permission of these files and directories are not world readable or writable.

Linux interview questions:
https://www.golinuxhub.com/2018/06/scenario-based-interview-question-beginner-experience-linux.html
https://www.tecmint.com/ssh-interview-questions/



/etc/nginx/nginx.conf
The file starts with 4 directives: user, worker_processes, error_log, and pid. 











